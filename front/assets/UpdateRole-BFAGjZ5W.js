import{L as I,d as L,b as E,$ as G,r as x,j as e,M as A,a0 as D,z as M,a1 as f,a2 as T,K as U,B as y}from"./index-CAbGq19O.js";import{s as l}from"./roles.module-DvaFn_FX.js";import{F as H}from"./FailedRequest-kw7mU4Mw.js";import{c as q}from"./roles-Cdw7N9oq.js";function W(){const[v]=I(),j=v.get("role")||"",{language:$}=L(),{roles:p}=$,{update_role_page:c}=p,{handleUpdateRole:k,loading:N}=q(`${j}`),{response:r,loading:C,execute:P,error:S}=E(`users/roles/get/${j}`),d=G(),[n,g]=x.useState(""),[m,i]=x.useState([]),b=x.useMemo(()=>Object.entries(d).flatMap(([s,t])=>Object.keys(t)),[]);x.useEffect(()=>{r&&(i(r.data.permissions),g(r.data.name))},[r]);const w=s=>{i(s?b:[])},F=(s,t)=>{const a=Object.keys(d[s]);i(t?o=>[...Array.from(new Set([...o,...a]))]:o=>o.filter(h=>!a.includes(h)))},R=s=>Object.keys(d[s]).map(a=>a).every(a=>m.includes(a)),_=b.every(s=>m.includes(s));return C?e.jsx(A,{}):S||!r?e.jsx("div",{className:"external-page-wra",children:e.jsx(H,{action:P})}):e.jsx("div",{className:"external-page-wra",children:e.jsxs("div",{className:"external-page",children:[e.jsxs("h2",{className:"header",children:[c.update_role,' "',r.data.name,'"']}),e.jsxs("div",{className:`${l.roleHeaderFields}`,children:[e.jsxs(D,{children:[e.jsx(M,{id:"role-name",value:n,onChange:s=>g(s.target.value),className:"full-width-input"}),e.jsx("label",{htmlFor:"role-name",children:c.role_name_label})]}),e.jsxs("div",{className:`${l.rolePermissionSwitcher}`,children:[e.jsx("label",{htmlFor:"toggle-all-permissions",children:c.all_permissions}),e.jsx(f,{inputId:"toggle-all-permissions",checked:_,onChange:s=>w(s.value)})]})]}),e.jsx("div",{className:`${l.permissionBoxesCon}`,children:Object.entries(d).map(([s,t])=>e.jsxs("div",{className:`${l.permissionBox}`,children:[e.jsxs("div",{className:`${l.rolePermissionSwitcher} ${l.permissionBoxHeader}`,children:[e.jsx("label",{htmlFor:`toggle-${s}-permissions`,children:p.permissionsKeys[s]||s}),e.jsx(f,{inputId:`toggle-${s}-permissions`,checked:R(s),onChange:a=>F(s,a.value)})]}),e.jsx("div",{className:`${l.permissionCheckBoxes}`,children:Object.entries(t).map(([a,o])=>{const h=`${s}-${a}`;return e.jsxs("div",{children:[e.jsx(T,{inputId:h,name:`${s}Permissions`,checked:m.includes(a),onChange:O=>{O.checked?i(u=>[...Array.from(new Set([...u,a]))]):i(u=>u.filter(B=>B!==a))}}),e.jsx("label",{htmlFor:h,className:"checkbox-label",children:o})]},a)})})]},s))}),e.jsx(U,{}),e.jsx("div",{className:"submit-area",children:e.jsx(y,{label:c.update_role,className:"button-align-end",loading:N,onClick:()=>{k(n,m)},disabled:!(n!=null&&n.trim())})})]})})}export{W as default};
